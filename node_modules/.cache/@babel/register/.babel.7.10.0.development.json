{
  "{\"sourceRoot\":\"C:\\\\Users\\\\cclay\\\\OneDrive\\\\GitHub\\\\ultimatettt\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cclay\\\\OneDrive\\\\GitHub\\\\ultimatettt\",\"filename\":\"C:\\\\Users\\\\cclay\\\\OneDrive\\\\GitHub\\\\ultimatettt\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cclay\\\\OneDrive\\\\GitHub\\\\ultimatettt\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cclay\\OneDrive\\GitHub\\ultimatettt\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cclay\\OneDrive\\GitHub\\ultimatettt",
      "filename": "C:\\Users\\cclay\\OneDrive\\GitHub\\ultimatettt\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cclay\\OneDrive\\GitHub\\ultimatettt",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cclay\\OneDrive\\GitHub\\ultimatettt\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cclay\\OneDrive\\GitHub\\ultimatettt\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cclay\\OneDrive\\GitHub\\ultimatettt\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar socket = require('socket.io'); //const Game = require('./Game.js');\n\n\nvar games = [];\nvar gIndex = -1;\nvar app = express();\nvar server = app.listen(4000, function () {\n  console.log(\"Listening on port 4000\");\n});\napp.use(express[\"static\"]('public')); // app.get('/', (req, res) => {\n//   res.render('index.html'); // home screen\n// });\n// app.get('/login', (req, res) => {\n//   res.render('login.html');\n// });\n// app.get('/play', (req, res) => {\n//   res.render('play.html');\n// });\n\nvar io = socket(server); // Custom namespaces - in each namespace you can define channels (games)\n// that sockets can join and leave\n\nvar classic = io.of('/classic');\n\nfunction Game(count) {\n  // Used to create Game objects\n  this.id = count; // This will be the channel name for sockets.io\n\n  this.p1 = '';\n  this.p2 = '';\n}\n\nfunction joinGame(gameid, socket) {\n  // Returns false if all games are full\n  if (gameid == -1) {\n    // games[0] is undefined\n    return false;\n  }\n\n  if (games[gameid].p1 == '') {\n    // if p1 spot is available\n    games[gameid].p1 = socket.id;\n    socket.join(gameid);\n    socket.emit('join', {\n      gameid: gameid,\n      playernum: 1\n    });\n    console.log(socket.id + ' joined game ' + gameid + ' as player 1');\n    return true;\n  } else if (games[gameid].p2 == '') {\n    // if p2 spot is available\n    games[gameid].p2 = socket.id;\n    socket.join(gameid);\n    socket.emit('join', {\n      gameid: gameid,\n      playernum: 2\n    });\n    console.log(socket.id + ' joined game ' + gameid + ' as player 2');\n    return true;\n  }\n\n  return false; // game is full\n}\n\nserver.on('error', function (err) {\n  console.error('Server error:', err);\n});\nio.on('connection', function (socket) {\n  socket.on('disconnect', function () {}); // Other player wins\n});\nclassic.on('connection', function (socket) {\n  if (joinGame(gIndex, socket)) {\n    socket.on('chat-message', function (message) {\n      io.of('classic').to(gIndex).emit('chat-message', message);\n    });\n  } else {\n    gIndex++;\n    var game = new Game(gIndex);\n    games.push(game);\n    console.log('New game created: ' + games[gIndex].id);\n\n    if (joinGame(gIndex, socket)) {\n      socket.on('chat-message', function (message) {\n        io.of('classic').to(gIndex).emit('chat-message', message);\n      });\n    }\n  }\n});\nio.on('message', function (data) {\n  console.log();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwic29ja2V0IiwiZ2FtZXMiLCJnSW5kZXgiLCJhcHAiLCJzZXJ2ZXIiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIiwidXNlIiwiaW8iLCJjbGFzc2ljIiwib2YiLCJHYW1lIiwiY291bnQiLCJpZCIsInAxIiwicDIiLCJqb2luR2FtZSIsImdhbWVpZCIsImpvaW4iLCJlbWl0IiwicGxheWVybnVtIiwib24iLCJlcnIiLCJlcnJvciIsIm1lc3NhZ2UiLCJ0byIsImdhbWUiLCJwdXNoIiwiZGF0YSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1DLE1BQU0sR0FBR0QsT0FBTyxDQUFDLFdBQUQsQ0FBdEIsQyxDQUVBOzs7QUFDQSxJQUFJRSxLQUFLLEdBQUcsRUFBWjtBQUNBLElBQUlDLE1BQU0sR0FBRyxDQUFDLENBQWQ7QUFFQSxJQUFJQyxHQUFHLEdBQUdMLE9BQU8sRUFBakI7QUFDQSxJQUFJTSxNQUFNLEdBQUdELEdBQUcsQ0FBQ0UsTUFBSixDQUFXLElBQVgsRUFBaUIsWUFBVztBQUN2Q0MsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksd0JBQVo7QUFDRCxDQUZZLENBQWI7QUFHQUosR0FBRyxDQUFDSyxHQUFKLENBQVFWLE9BQU8sVUFBUCxDQUFlLFFBQWYsQ0FBUixFLENBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUlXLEVBQUUsR0FBR1QsTUFBTSxDQUFDSSxNQUFELENBQWYsQyxDQUNBO0FBQ0E7O0FBQ0EsSUFBTU0sT0FBTyxHQUFHRCxFQUFFLENBQUNFLEVBQUgsQ0FBTSxVQUFOLENBQWhCOztBQUVBLFNBQVNDLElBQVQsQ0FBY0MsS0FBZCxFQUFxQjtBQUFFO0FBQ3JCLE9BQUtDLEVBQUwsR0FBVUQsS0FBVixDQURtQixDQUNGOztBQUNqQixP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QUEsTUFBTSxDQUFDc0IsRUFBUCxDQUFVLGNBQVYsRUFBMEIsVUFBU0csT0FBVCxFQUFrQjtBQUMxQ2hCLFFBQUFBLEVBQUUsQ0FBQ0UsRUFBSCxDQUFNLFNBQU4sRUFBaUJlLEVBQWpCLENBQW9CeEIsTUFBcEIsRUFBNEJrQixJQUE1QixDQUFpQyxjQUFqQyxFQUFpREssT0FBakQ7QUFDRCxPQUZEO0FBR0Q7QUFDRjtBQUNGLENBaEJEO0FBa0JBaEIsRUFBRSxDQUFDYSxFQUFILENBQU0sU0FBTixFQUFpQixVQUFTTyxJQUFULEVBQWU7QUFDOUJ2QixFQUFBQSxPQUFPLENBQUNDLEdBQVI7QUFDRCxDQUZEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcY2NsYXlcXE9uZURyaXZlXFxHaXRIdWJcXHVsdGltYXRldHR0XFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG5jb25zdCBzb2NrZXQgPSByZXF1aXJlKCdzb2NrZXQuaW8nKTtcclxuXHJcbi8vY29uc3QgR2FtZSA9IHJlcXVpcmUoJy4vR2FtZS5qcycpO1xyXG52YXIgZ2FtZXMgPSBbXTtcclxudmFyIGdJbmRleCA9IC0xO1xyXG5cclxudmFyIGFwcCA9IGV4cHJlc3MoKTtcclxudmFyIHNlcnZlciA9IGFwcC5saXN0ZW4oNDAwMCwgZnVuY3Rpb24oKSB7XHJcbiAgY29uc29sZS5sb2coXCJMaXN0ZW5pbmcgb24gcG9ydCA0MDAwXCIpO1xyXG59KTtcclxuYXBwLnVzZShleHByZXNzLnN0YXRpYygncHVibGljJykpO1xyXG4vLyBhcHAuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiB7XHJcbi8vICAgcmVzLnJlbmRlcignaW5kZXguaHRtbCcpOyAvLyBob21lIHNjcmVlblxyXG4vLyB9KTtcclxuLy8gYXBwLmdldCgnL2xvZ2luJywgKHJlcSwgcmVzKSA9PiB7XHJcbi8vICAgcmVzLnJlbmRlcignbG9naW4uaHRtbCcpO1xyXG4vLyB9KTtcclxuLy8gYXBwLmdldCgnL3BsYXknLCAocmVxLCByZXMpID0+IHtcclxuLy8gICByZXMucmVuZGVyKCdwbGF5Lmh0bWwnKTtcclxuLy8gfSk7XHJcblxyXG52YXIgaW8gPSBzb2NrZXQoc2VydmVyKTtcclxuLy8gQ3VzdG9tIG5hbWVzcGFjZXMgLSBpbiBlYWNoIG5hbWVzcGFjZSB5b3UgY2FuIGRlZmluZSBjaGFubmVscyAoZ2FtZXMpXHJcbi8vIHRoYXQgc29ja2V0cyBjYW4gam9pbiBhbmQgbGVhdmVcclxuY29uc3QgY2xhc3NpYyA9IGlvLm9mKCcvY2xhc3NpYycpO1xyXG5cclxuZnVuY3Rpb24gR2FtZShjb3VudCkgeyAvLyBVc2VkIHRvIGNyZWF0ZSBHYW1lIG9iamVjdHNcclxuICB0aGlzLmlkID0gY291bnQ7IC8vIFRoaXMgd2lsbCBiZSB0aGUgY2hhbm5lbCBuYW1lIGZvciBzb2NrZXRzLmlvXHJcbiAgdGhpcy5wMSA9ICcnO1xyXG4gIHRoaXMucDIgPSAnJztcclxufVxyXG5cclxuZnVuY3Rpb24gam9pbkdhbWUoZ2FtZWlkLCBzb2NrZXQpIHsgLy8gUmV0dXJucyBmYWxzZSBpZiBhbGwgZ2FtZXMgYXJlIGZ1bGxcclxuICBpZiAoZ2FtZWlkID09IC0xKSB7IC8vIGdhbWVzWzBdIGlzIHVuZGVmaW5lZFxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuICBpZiAoZ2FtZXNbZ2FtZWlkXS5wMSA9PSAnJykgeyAvLyBpZiBwMSBzcG90IGlzIGF2YWlsYWJsZVxyXG4gICAgZ2FtZXNbZ2FtZWlkXS5wMSA9IHNvY2tldC5pZDtcclxuICAgIHNvY2tldC5qb2luKGdhbWVpZCk7XHJcbiAgICBzb2NrZXQuZW1pdCgnam9pbicsIHtcclxuICAgICAgZ2FtZWlkOiBnYW1laWQsXHJcbiAgICAgIHBsYXllcm51bTogMVxyXG4gICAgfSk7XHJcbiAgICBjb25zb2xlLmxvZyhzb2NrZXQuaWQgKyAnIGpvaW5lZCBnYW1lICcgKyBnYW1laWQgKyAnIGFzIHBsYXllciAxJyk7XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9IGVsc2UgaWYgKGdhbWVzW2dhbWVpZF0ucDIgPT0gJycpIHsgLy8gaWYgcDIgc3BvdCBpcyBhdmFpbGFibGVcclxuICAgIGdhbWVzW2dhbWVpZF0ucDIgPSBzb2NrZXQuaWQ7XHJcbiAgICBzb2NrZXQuam9pbihnYW1laWQpO1xyXG4gICAgc29ja2V0LmVtaXQoJ2pvaW4nLCB7XHJcbiAgICAgIGdhbWVpZDogZ2FtZWlkLFxyXG4gICAgICBwbGF5ZXJudW06IDJcclxuICAgIH0pO1xyXG4gICAgY29uc29sZS5sb2coc29ja2V0LmlkICsgJyBqb2luZWQgZ2FtZSAnICsgZ2FtZWlkICsgJyBhcyBwbGF5ZXIgMicpO1xyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfVxyXG4gIHJldHVybiBmYWxzZTsgLy8gZ2FtZSBpcyBmdWxsXHJcbn1cclxuXHJcbnNlcnZlci5vbignZXJyb3InLCBmdW5jdGlvbihlcnIpIHtcclxuICBjb25zb2xlLmVycm9yKCdTZXJ2ZXIgZXJyb3I6JywgZXJyKTtcclxufSk7XHJcblxyXG5cclxuaW8ub24oJ2Nvbm5lY3Rpb24nLCBmdW5jdGlvbihzb2NrZXQpIHtcclxuICBzb2NrZXQub24oJ2Rpc2Nvbm5lY3QnLCBmdW5jdGlvbigpIHt9KTsgLy8gT3RoZXIgcGxheWVyIHdpbnNcclxufSk7XHJcblxyXG5jbGFzc2ljLm9uKCdjb25uZWN0aW9uJywgZnVuY3Rpb24oc29ja2V0KSB7XHJcbiAgaWYgKGpvaW5HYW1lKGdJbmRleCwgc29ja2V0KSkge1xyXG4gICAgc29ja2V0Lm9uKCdjaGF0LW1lc3NhZ2UnLCBmdW5jdGlvbihtZXNzYWdlKSB7XHJcbiAgICAgIGlvLm9mKCdjbGFzc2ljJykudG8oZ0luZGV4KS5lbWl0KCdjaGF0LW1lc3NhZ2UnLCBtZXNzYWdlKTtcclxuICAgIH0pO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBnSW5kZXgrKztcclxuICAgIHZhciBnYW1lID0gbmV3IEdhbWUoZ0luZGV4KTtcclxuICAgIGdhbWVzLnB1c2goZ2FtZSk7XHJcbiAgICBjb25zb2xlLmxvZygnTmV3IGdhbWUgY3JlYXRlZDogJyArIGdhbWVzW2dJbmRleF0uaWQpO1xyXG4gICAgaWYgKGpvaW5HYW1lKGdJbmRleCwgc29ja2V0KSkge1xyXG4gICAgICBzb2NrZXQub24oJ2NoYXQtbWVzc2FnZScsIGZ1bmN0aW9uKG1lc3NhZ2UpIHtcclxuICAgICAgICBpby5vZignY2xhc3NpYycpLnRvKGdJbmRleCkuZW1pdCgnY2hhdC1tZXNzYWdlJywgbWVzc2FnZSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxufSk7XHJcblxyXG5pby5vbignbWVzc2FnZScsIGZ1bmN0aW9uKGRhdGEpIHtcclxuICBjb25zb2xlLmxvZygpO1xyXG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "socket",
        "games",
        "gIndex",
        "app",
        "server",
        "listen",
        "console",
        "log",
        "use",
        "io",
        "classic",
        "of",
        "Game",
        "count",
        "id",
        "p1",
        "p2",
        "joinGame",
        "gameid",
        "join",
        "emit",
        "playernum",
        "on",
        "err",
        "error",
        "message",
        "to",
        "game",
        "push",
        "data"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\cclay\\OneDrive\\GitHub\\ultimatettt\\",
      "sourcesContent": [
        "const express = require('express');\r\nconst socket = require('socket.io');\r\n\r\n//const Game = require('./Game.js');\r\nvar games = [];\r\nvar gIndex = -1;\r\n\r\nvar app = express();\r\nvar server = app.listen(4000, function() {\r\n  console.log(\"Listening on port 4000\");\r\n});\r\napp.use(express.static('public'));\r\n// app.get('/', (req, res) => {\r\n//   res.render('index.html'); // home screen\r\n// });\r\n// app.get('/login', (req, res) => {\r\n//   res.render('login.html');\r\n// });\r\n// app.get('/play', (req, res) => {\r\n//   res.render('play.html');\r\n// });\r\n\r\nvar io = socket(server);\r\n// Custom namespaces - in each namespace you can define channels (games)\r\n// that sockets can join and leave\r\nconst classic = io.of('/classic');\r\n\r\nfunction Game(count) { // Used to create Game objects\r\n  this.id = count; // This will be the channel name for sockets.io\r\n  this.p1 = '';\r\n  this.p2 = '';\r\n}\r\n\r\nfunction joinGame(gameid, socket) { // Returns false if all games are full\r\n  if (gameid == -1) { // games[0] is undefined\r\n    return false;\r\n  }\r\n  if (games[gameid].p1 == '') { // if p1 spot is available\r\n    games[gameid].p1 = socket.id;\r\n    socket.join(gameid);\r\n    socket.emit('join', {\r\n      gameid: gameid,\r\n      playernum: 1\r\n    });\r\n    console.log(socket.id + ' joined game ' + gameid + ' as player 1');\r\n    return true;\r\n  } else if (games[gameid].p2 == '') { // if p2 spot is available\r\n    games[gameid].p2 = socket.id;\r\n    socket.join(gameid);\r\n    socket.emit('join', {\r\n      gameid: gameid,\r\n      playernum: 2\r\n    });\r\n    console.log(socket.id + ' joined game ' + gameid + ' as player 2');\r\n    return true;\r\n  }\r\n  return false; // game is full\r\n}\r\n\r\nserver.on('error', function(err) {\r\n  console.error('Server error:', err);\r\n});\r\n\r\n\r\nio.on('connection', function(socket) {\r\n  socket.on('disconnect', function() {}); // Other player wins\r\n});\r\n\r\nclassic.on('connection', function(socket) {\r\n  if (joinGame(gIndex, socket)) {\r\n    socket.on('chat-message', function(message) {\r\n      io.of('classic').to(gIndex).emit('chat-message', message);\r\n    });\r\n  } else {\r\n    gIndex++;\r\n    var game = new Game(gIndex);\r\n    games.push(game);\r\n    console.log('New game created: ' + games[gIndex].id);\r\n    if (joinGame(gIndex, socket)) {\r\n      socket.on('chat-message', function(message) {\r\n        io.of('classic').to(gIndex).emit('chat-message', message);\r\n      });\r\n    }\r\n  }\r\n});\r\n\r\nio.on('message', function(data) {\r\n  console.log();\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1590598233689
  }
}